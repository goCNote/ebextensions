packages:
  yum:
    awslogs: []
    tcpdump: []

files:
  /etc/rc.d/init.d/dnsquerylogs:
    mode: "000755"
    owner: root
    group: root
    content: |
      #!/bin/sh
      #
      # dnsquerylogs      Start/Stop the DNS Query Logs agent
      #
      # chkconfig: 2345 1 99
      # description:      This script is responsible for running tcpdump as a \
      #                   daemon in order to capture DNS Query Logs

      ### BEGIN INIT INFO
      # Provides:          dnsquerylogs
      # Required-Start:    networking
      # Required-Stop:     networking
      # Default-Start:     2 3 4 5
      # Default-Stop:      0 1 2 3 4 5 6
      # Short-Description: Capture DNS Query Logs.
      # Description:       This script is responsible for running tcpdump as a \
      #                    daemon in order to capture DNS Query Logs
      ### END INIT INFO

      # Source function library.
      . /etc/init.d/functions

      prog=dnsquerylogs
      exec="/usr/sbin/tcpdump"
      pidfile=/var/run/dnsquerylogs.pid
      logfile=/var/log/dnsqueries.log
      retry_count=5

      start() {
        if [ "${UID}" -ne 0 ] ; then
            echo "User has insufficient privilege."
            exit 4
        fi
        [ -x ${exec} ] || exit 5
        if [ -e ${pidfile} ]; then
          rh_status
        else
          echo -n "Starting ${prog} to capture DNS Query Logs... "
          PID=$(nohup ${exec} port 53 > ${logfile} 2>&1 & echo $!)
          echo ${PID} > ${pidfile}
          echo_success
          echo
        fi
      }

      stop() {
        if [ "${UID}" -ne 0 ] ; then
            echo "User has insufficient privilege."
            exit 4
        fi
        if [ -e "${pidfile}" ]; then
          echo -n "Shutting down DNS Query Logs... "
          kill $(cat ${pidfile})
          retval=$?
          if [ ${retval} -eq 0 ]; then
            rm -f ${pidfile}
            echo_success
          else
            echo_failure
          fi
        else
          # not running, but that's OK
          echo_success
        fi
        echo
      }

      restart() {
        rh_status_q && stop
        start
      }

      rh_status() {
        status -p ${pidfile} ${prog}
      }

      rh_status_q() {
        rh_status >/dev/null 2>&1
      }

      case "$1" in
        start)
          start
          ;;
        stop)
          stop
          ;;
        status)
          rh_status
          ;;
        restart)
          restart
          ;;
        *)
          echo "Usage: dnsquerylogs {start|stop|status|restart}"
          exit 1
          ;;
      esac

      exit $?
  /etc/logrotate.elasticbeanstalk.hourly/logrotate.cnote.dnsquery.conf:
    mode: "000644"
    owner: root
    group: root
    content: |
      /var/log/dnsqueries.log {
        size 10M
        missingok
        notifempty
        rotate 5
        compress
        copytruncate
        dateext
        dateformat -%s
        olddir /var/log/rotated
      }
  /etc/cron.hourly/cron.logrotate.cnote.dnsquery.conf:
    mode: "000755"
    owner: root
    group: root
    content: |
      #!/bin/sh
      test -x /usr/sbin/logrotate || exit 0
      /usr/sbin/logrotate -f /etc/logrotate.elasticbeanstalk.hourly/logrotate.cnote.dnsquery.conf
  /etc/awslogs/config/dnsquerylogs.conf:
    mode: "000600"
    owner: root
    group: root
    content: |
      [/var/log/dnsqueries.log]
      log_group_name = `{"Fn::Join":["/", ["/aws/elasticbeanstalk", { "Ref":"AWSEBEnvironmentName" }, "var/log/dnsqueries.log"]]}`
      log_stream_name = {instance_id}
      file = /var/log/dnsqueries.log

services:
  sysvinit:
    dnsquerylogs:
      enabled: true
      ensureRunning: true
      files:
        - /etc/rc.d/init.d/dnsquerylogs
        - /etc/logrotate.elasticbeanstalk.hourly/logrotate.cnote.dnsquery.conf
      packages:
        yum:
          tcpdump: []

commands:
  01:
    command: chkconfig awslogs on
  02:
    command: chkconfig dnsquerylogs on
  03:
    command: service awslogs restart
  04:
    command: service dnsquerylogs restart
